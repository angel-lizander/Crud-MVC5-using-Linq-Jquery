#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentCar_2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RentCar")]
	public partial class RentCarDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCarro(Carro instance);
    partial void UpdateCarro(Carro instance);
    partial void DeleteCarro(Carro instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertRenta(Renta instance);
    partial void UpdateRenta(Renta instance);
    partial void DeleteRenta(Renta instance);
    partial void InsertRentador(Rentador instance);
    partial void UpdateRentador(Rentador instance);
    partial void DeleteRentador(Rentador instance);
    partial void InsertVendedor(Vendedor instance);
    partial void UpdateVendedor(Vendedor instance);
    partial void DeleteVendedor(Vendedor instance);
    #endregion
		
		public RentCarDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RentCarConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RentCarDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentCarDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentCarDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentCarDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Carro> Carros
		{
			get
			{
				return this.GetTable<Carro>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelos
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<Renta> Rentas
		{
			get
			{
				return this.GetTable<Renta>();
			}
		}
		
		public System.Data.Linq.Table<Rentador> Rentadors
		{
			get
			{
				return this.GetTable<Rentador>();
			}
		}
		
		public System.Data.Linq.Table<Vendedor> Vendedors
		{
			get
			{
				return this.GetTable<Vendedor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carro")]
	public partial class Carro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCarro;
		
		private System.Nullable<long> _Matricula;
		
		private System.Nullable<int> _ModeloID;
		
		private string _Color;
		
		private EntitySet<Renta> _Rentas;
		
		private EntityRef<Modelo> _Modelo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCarroChanging(int value);
    partial void OnIDCarroChanged();
    partial void OnMatriculaChanging(System.Nullable<long> value);
    partial void OnMatriculaChanged();
    partial void OnModeloIDChanging(System.Nullable<int> value);
    partial void OnModeloIDChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public Carro()
		{
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			this._Modelo = default(EntityRef<Modelo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCarro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCarro
		{
			get
			{
				return this._IDCarro;
			}
			set
			{
				if ((this._IDCarro != value))
				{
					this.OnIDCarroChanging(value);
					this.SendPropertyChanging();
					this._IDCarro = value;
					this.SendPropertyChanged("IDCarro");
					this.OnIDCarroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="BigInt")]
		public System.Nullable<long> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeloID", DbType="Int")]
		public System.Nullable<int> ModeloID
		{
			get
			{
				return this._ModeloID;
			}
			set
			{
				if ((this._ModeloID != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModeloIDChanging(value);
					this.SendPropertyChanging();
					this._ModeloID = value;
					this.SendPropertyChanged("ModeloID");
					this.OnModeloIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carro_Renta", Storage="_Rentas", ThisKey="IDCarro", OtherKey="IDCarro")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Carro", Storage="_Modelo", ThisKey="ModeloID", OtherKey="IDModelo", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.Carros.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.Carros.Add(this);
						this._ModeloID = value.IDModelo;
					}
					else
					{
						this._ModeloID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Carro = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Carro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDModelo;
		
		private string _Año;
		
		private string _NombreModelo;
		
		private EntitySet<Carro> _Carros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDModeloChanging(int value);
    partial void OnIDModeloChanged();
    partial void OnAñoChanging(string value);
    partial void OnAñoChanged();
    partial void OnNombreModeloChanging(string value);
    partial void OnNombreModeloChanged();
    #endregion
		
		public Modelo()
		{
			this._Carros = new EntitySet<Carro>(new Action<Carro>(this.attach_Carros), new Action<Carro>(this.detach_Carros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDModelo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDModelo
		{
			get
			{
				return this._IDModelo;
			}
			set
			{
				if ((this._IDModelo != value))
				{
					this.OnIDModeloChanging(value);
					this.SendPropertyChanging();
					this._IDModelo = value;
					this.SendPropertyChanged("IDModelo");
					this.OnIDModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Año", DbType="Char(4)")]
		public string Año
		{
			get
			{
				return this._Año;
			}
			set
			{
				if ((this._Año != value))
				{
					this.OnAñoChanging(value);
					this.SendPropertyChanging();
					this._Año = value;
					this.SendPropertyChanged("Año");
					this.OnAñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreModelo", DbType="VarChar(40)")]
		public string NombreModelo
		{
			get
			{
				return this._NombreModelo;
			}
			set
			{
				if ((this._NombreModelo != value))
				{
					this.OnNombreModeloChanging(value);
					this.SendPropertyChanging();
					this._NombreModelo = value;
					this.SendPropertyChanged("NombreModelo");
					this.OnNombreModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Carro", Storage="_Carros", ThisKey="IDModelo", OtherKey="ModeloID")]
		public EntitySet<Carro> Carros
		{
			get
			{
				return this._Carros;
			}
			set
			{
				this._Carros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carros(Carro entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_Carros(Carro entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Renta")]
	public partial class Renta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRenta;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _IDVendedor;
		
		private System.Nullable<int> _IDRentador;
		
		private System.Nullable<int> _IDCarro;
		
		private EntityRef<Carro> _Carro;
		
		private EntityRef<Rentador> _Rentador;
		
		private EntityRef<Vendedor> _Vendedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRentaChanging(int value);
    partial void OnIDRentaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnIDVendedorChanging(System.Nullable<int> value);
    partial void OnIDVendedorChanged();
    partial void OnIDRentadorChanging(System.Nullable<int> value);
    partial void OnIDRentadorChanged();
    partial void OnIDCarroChanging(System.Nullable<int> value);
    partial void OnIDCarroChanged();
    #endregion
		
		public Renta()
		{
			this._Carro = default(EntityRef<Carro>);
			this._Rentador = default(EntityRef<Rentador>);
			this._Vendedor = default(EntityRef<Vendedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRenta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRenta
		{
			get
			{
				return this._IDRenta;
			}
			set
			{
				if ((this._IDRenta != value))
				{
					this.OnIDRentaChanging(value);
					this.SendPropertyChanging();
					this._IDRenta = value;
					this.SendPropertyChanged("IDRenta");
					this.OnIDRentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVendedor", DbType="Int")]
		public System.Nullable<int> IDVendedor
		{
			get
			{
				return this._IDVendedor;
			}
			set
			{
				if ((this._IDVendedor != value))
				{
					if (this._Vendedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVendedorChanging(value);
					this.SendPropertyChanging();
					this._IDVendedor = value;
					this.SendPropertyChanged("IDVendedor");
					this.OnIDVendedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRentador", DbType="Int")]
		public System.Nullable<int> IDRentador
		{
			get
			{
				return this._IDRentador;
			}
			set
			{
				if ((this._IDRentador != value))
				{
					if (this._Rentador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRentadorChanging(value);
					this.SendPropertyChanging();
					this._IDRentador = value;
					this.SendPropertyChanged("IDRentador");
					this.OnIDRentadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCarro", DbType="Int")]
		public System.Nullable<int> IDCarro
		{
			get
			{
				return this._IDCarro;
			}
			set
			{
				if ((this._IDCarro != value))
				{
					if (this._Carro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarroChanging(value);
					this.SendPropertyChanging();
					this._IDCarro = value;
					this.SendPropertyChanged("IDCarro");
					this.OnIDCarroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carro_Renta", Storage="_Carro", ThisKey="IDCarro", OtherKey="IDCarro", IsForeignKey=true)]
		public Carro Carro
		{
			get
			{
				return this._Carro.Entity;
			}
			set
			{
				Carro previousValue = this._Carro.Entity;
				if (((previousValue != value) 
							|| (this._Carro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carro.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Carro.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDCarro = value.IDCarro;
					}
					else
					{
						this._IDCarro = default(Nullable<int>);
					}
					this.SendPropertyChanged("Carro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rentador_Renta", Storage="_Rentador", ThisKey="IDRentador", OtherKey="RentadorID", IsForeignKey=true)]
		public Rentador Rentador
		{
			get
			{
				return this._Rentador.Entity;
			}
			set
			{
				Rentador previousValue = this._Rentador.Entity;
				if (((previousValue != value) 
							|| (this._Rentador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rentador.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Rentador.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDRentador = value.RentadorID;
					}
					else
					{
						this._IDRentador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rentador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Renta", Storage="_Vendedor", ThisKey="IDVendedor", OtherKey="IDVendedor", IsForeignKey=true)]
		public Vendedor Vendedor
		{
			get
			{
				return this._Vendedor.Entity;
			}
			set
			{
				Vendedor previousValue = this._Vendedor.Entity;
				if (((previousValue != value) 
							|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendedor.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Vendedor.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDVendedor = value.IDVendedor;
					}
					else
					{
						this._IDVendedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vendedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rentador")]
	public partial class Rentador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RentadorID;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Cedula;
		
		private EntitySet<Renta> _Rentas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRentadorIDChanging(int value);
    partial void OnRentadorIDChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    #endregion
		
		public Rentador()
		{
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentadorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RentadorID
		{
			get
			{
				return this._RentadorID;
			}
			set
			{
				if ((this._RentadorID != value))
				{
					this.OnRentadorIDChanging(value);
					this.SendPropertyChanging();
					this._RentadorID = value;
					this.SendPropertyChanged("RentadorID");
					this.OnRentadorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(40)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="Char(11)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rentador_Renta", Storage="_Rentas", ThisKey="RentadorID", OtherKey="IDRentador")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Rentador = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Rentador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendedor")]
	public partial class Vendedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVendedor;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private EntitySet<Renta> _Rentas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVendedorChanging(int value);
    partial void OnIDVendedorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    #endregion
		
		public Vendedor()
		{
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVendedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVendedor
		{
			get
			{
				return this._IDVendedor;
			}
			set
			{
				if ((this._IDVendedor != value))
				{
					this.OnIDVendedorChanging(value);
					this.SendPropertyChanging();
					this._IDVendedor = value;
					this.SendPropertyChanged("IDVendedor");
					this.OnIDVendedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(40)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Renta", Storage="_Rentas", ThisKey="IDVendedor", OtherKey="IDVendedor")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = null;
		}
	}
}
#pragma warning restore 1591
